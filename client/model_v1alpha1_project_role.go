/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the V1alpha1ProjectRole type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1alpha1ProjectRole{}

// V1alpha1ProjectRole struct for V1alpha1ProjectRole
type V1alpha1ProjectRole struct {
	Description *string `json:"description,omitempty"`
	Groups []string `json:"groups,omitempty"`
	JwtTokens []V1alpha1JWTToken `json:"jwtTokens,omitempty"`
	Name *string `json:"name,omitempty"`
	Policies []string `json:"policies,omitempty"`
}

// NewV1alpha1ProjectRole instantiates a new V1alpha1ProjectRole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1ProjectRole() *V1alpha1ProjectRole {
	this := V1alpha1ProjectRole{}
	return &this
}

// NewV1alpha1ProjectRoleWithDefaults instantiates a new V1alpha1ProjectRole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1ProjectRoleWithDefaults() *V1alpha1ProjectRole {
	this := V1alpha1ProjectRole{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *V1alpha1ProjectRole) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ProjectRole) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *V1alpha1ProjectRole) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *V1alpha1ProjectRole) SetDescription(v string) {
	o.Description = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *V1alpha1ProjectRole) GetGroups() []string {
	if o == nil || isNil(o.Groups) {
		var ret []string
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ProjectRole) GetGroupsOk() ([]string, bool) {
	if o == nil || isNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *V1alpha1ProjectRole) HasGroups() bool {
	if o != nil && !isNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []string and assigns it to the Groups field.
func (o *V1alpha1ProjectRole) SetGroups(v []string) {
	o.Groups = v
}

// GetJwtTokens returns the JwtTokens field value if set, zero value otherwise.
func (o *V1alpha1ProjectRole) GetJwtTokens() []V1alpha1JWTToken {
	if o == nil || isNil(o.JwtTokens) {
		var ret []V1alpha1JWTToken
		return ret
	}
	return o.JwtTokens
}

// GetJwtTokensOk returns a tuple with the JwtTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ProjectRole) GetJwtTokensOk() ([]V1alpha1JWTToken, bool) {
	if o == nil || isNil(o.JwtTokens) {
		return nil, false
	}
	return o.JwtTokens, true
}

// HasJwtTokens returns a boolean if a field has been set.
func (o *V1alpha1ProjectRole) HasJwtTokens() bool {
	if o != nil && !isNil(o.JwtTokens) {
		return true
	}

	return false
}

// SetJwtTokens gets a reference to the given []V1alpha1JWTToken and assigns it to the JwtTokens field.
func (o *V1alpha1ProjectRole) SetJwtTokens(v []V1alpha1JWTToken) {
	o.JwtTokens = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1alpha1ProjectRole) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ProjectRole) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1alpha1ProjectRole) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1alpha1ProjectRole) SetName(v string) {
	o.Name = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *V1alpha1ProjectRole) GetPolicies() []string {
	if o == nil || isNil(o.Policies) {
		var ret []string
		return ret
	}
	return o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ProjectRole) GetPoliciesOk() ([]string, bool) {
	if o == nil || isNil(o.Policies) {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *V1alpha1ProjectRole) HasPolicies() bool {
	if o != nil && !isNil(o.Policies) {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given []string and assigns it to the Policies field.
func (o *V1alpha1ProjectRole) SetPolicies(v []string) {
	o.Policies = v
}

func (o V1alpha1ProjectRole) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1alpha1ProjectRole) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	if !isNil(o.JwtTokens) {
		toSerialize["jwtTokens"] = o.JwtTokens
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Policies) {
		toSerialize["policies"] = o.Policies
	}
	return toSerialize, nil
}

type NullableV1alpha1ProjectRole struct {
	value *V1alpha1ProjectRole
	isSet bool
}

func (v NullableV1alpha1ProjectRole) Get() *V1alpha1ProjectRole {
	return v.value
}

func (v *NullableV1alpha1ProjectRole) Set(val *V1alpha1ProjectRole) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1ProjectRole) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1ProjectRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1ProjectRole(val *V1alpha1ProjectRole) *NullableV1alpha1ProjectRole {
	return &NullableV1alpha1ProjectRole{value: val, isSet: true}
}

func (v NullableV1alpha1ProjectRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1ProjectRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


