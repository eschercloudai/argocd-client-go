/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the V1alpha1JWTToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1alpha1JWTToken{}

// V1alpha1JWTToken struct for V1alpha1JWTToken
type V1alpha1JWTToken struct {
	Exp *string `json:"exp,omitempty"`
	Iat *string `json:"iat,omitempty"`
	Id *string `json:"id,omitempty"`
}

// NewV1alpha1JWTToken instantiates a new V1alpha1JWTToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1JWTToken() *V1alpha1JWTToken {
	this := V1alpha1JWTToken{}
	return &this
}

// NewV1alpha1JWTTokenWithDefaults instantiates a new V1alpha1JWTToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1JWTTokenWithDefaults() *V1alpha1JWTToken {
	this := V1alpha1JWTToken{}
	return &this
}

// GetExp returns the Exp field value if set, zero value otherwise.
func (o *V1alpha1JWTToken) GetExp() string {
	if o == nil || isNil(o.Exp) {
		var ret string
		return ret
	}
	return *o.Exp
}

// GetExpOk returns a tuple with the Exp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1JWTToken) GetExpOk() (*string, bool) {
	if o == nil || isNil(o.Exp) {
		return nil, false
	}
	return o.Exp, true
}

// HasExp returns a boolean if a field has been set.
func (o *V1alpha1JWTToken) HasExp() bool {
	if o != nil && !isNil(o.Exp) {
		return true
	}

	return false
}

// SetExp gets a reference to the given string and assigns it to the Exp field.
func (o *V1alpha1JWTToken) SetExp(v string) {
	o.Exp = &v
}

// GetIat returns the Iat field value if set, zero value otherwise.
func (o *V1alpha1JWTToken) GetIat() string {
	if o == nil || isNil(o.Iat) {
		var ret string
		return ret
	}
	return *o.Iat
}

// GetIatOk returns a tuple with the Iat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1JWTToken) GetIatOk() (*string, bool) {
	if o == nil || isNil(o.Iat) {
		return nil, false
	}
	return o.Iat, true
}

// HasIat returns a boolean if a field has been set.
func (o *V1alpha1JWTToken) HasIat() bool {
	if o != nil && !isNil(o.Iat) {
		return true
	}

	return false
}

// SetIat gets a reference to the given string and assigns it to the Iat field.
func (o *V1alpha1JWTToken) SetIat(v string) {
	o.Iat = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V1alpha1JWTToken) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1JWTToken) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V1alpha1JWTToken) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *V1alpha1JWTToken) SetId(v string) {
	o.Id = &v
}

func (o V1alpha1JWTToken) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1alpha1JWTToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Exp) {
		toSerialize["exp"] = o.Exp
	}
	if !isNil(o.Iat) {
		toSerialize["iat"] = o.Iat
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableV1alpha1JWTToken struct {
	value *V1alpha1JWTToken
	isSet bool
}

func (v NullableV1alpha1JWTToken) Get() *V1alpha1JWTToken {
	return v.value
}

func (v *NullableV1alpha1JWTToken) Set(val *V1alpha1JWTToken) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1JWTToken) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1JWTToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1JWTToken(val *V1alpha1JWTToken) *NullableV1alpha1JWTToken {
	return &NullableV1alpha1JWTToken{value: val, isSet: true}
}

func (v NullableV1alpha1JWTToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1JWTToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


