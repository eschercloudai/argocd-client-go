/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the V1alpha1ResourceStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1alpha1ResourceStatus{}

// V1alpha1ResourceStatus struct for V1alpha1ResourceStatus
type V1alpha1ResourceStatus struct {
	Group *string `json:"group,omitempty"`
	Health *V1alpha1HealthStatus `json:"health,omitempty"`
	Hook *bool `json:"hook,omitempty"`
	Kind *string `json:"kind,omitempty"`
	Name *string `json:"name,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	RequiresPruning *bool `json:"requiresPruning,omitempty"`
	Status *string `json:"status,omitempty"`
	SyncWave *string `json:"syncWave,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewV1alpha1ResourceStatus instantiates a new V1alpha1ResourceStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1ResourceStatus() *V1alpha1ResourceStatus {
	this := V1alpha1ResourceStatus{}
	return &this
}

// NewV1alpha1ResourceStatusWithDefaults instantiates a new V1alpha1ResourceStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1ResourceStatusWithDefaults() *V1alpha1ResourceStatus {
	this := V1alpha1ResourceStatus{}
	return &this
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *V1alpha1ResourceStatus) GetGroup() string {
	if o == nil || isNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceStatus) GetGroupOk() (*string, bool) {
	if o == nil || isNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *V1alpha1ResourceStatus) HasGroup() bool {
	if o != nil && !isNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *V1alpha1ResourceStatus) SetGroup(v string) {
	o.Group = &v
}

// GetHealth returns the Health field value if set, zero value otherwise.
func (o *V1alpha1ResourceStatus) GetHealth() V1alpha1HealthStatus {
	if o == nil || isNil(o.Health) {
		var ret V1alpha1HealthStatus
		return ret
	}
	return *o.Health
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceStatus) GetHealthOk() (*V1alpha1HealthStatus, bool) {
	if o == nil || isNil(o.Health) {
		return nil, false
	}
	return o.Health, true
}

// HasHealth returns a boolean if a field has been set.
func (o *V1alpha1ResourceStatus) HasHealth() bool {
	if o != nil && !isNil(o.Health) {
		return true
	}

	return false
}

// SetHealth gets a reference to the given V1alpha1HealthStatus and assigns it to the Health field.
func (o *V1alpha1ResourceStatus) SetHealth(v V1alpha1HealthStatus) {
	o.Health = &v
}

// GetHook returns the Hook field value if set, zero value otherwise.
func (o *V1alpha1ResourceStatus) GetHook() bool {
	if o == nil || isNil(o.Hook) {
		var ret bool
		return ret
	}
	return *o.Hook
}

// GetHookOk returns a tuple with the Hook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceStatus) GetHookOk() (*bool, bool) {
	if o == nil || isNil(o.Hook) {
		return nil, false
	}
	return o.Hook, true
}

// HasHook returns a boolean if a field has been set.
func (o *V1alpha1ResourceStatus) HasHook() bool {
	if o != nil && !isNil(o.Hook) {
		return true
	}

	return false
}

// SetHook gets a reference to the given bool and assigns it to the Hook field.
func (o *V1alpha1ResourceStatus) SetHook(v bool) {
	o.Hook = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *V1alpha1ResourceStatus) GetKind() string {
	if o == nil || isNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceStatus) GetKindOk() (*string, bool) {
	if o == nil || isNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *V1alpha1ResourceStatus) HasKind() bool {
	if o != nil && !isNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *V1alpha1ResourceStatus) SetKind(v string) {
	o.Kind = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1alpha1ResourceStatus) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceStatus) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1alpha1ResourceStatus) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1alpha1ResourceStatus) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *V1alpha1ResourceStatus) GetNamespace() string {
	if o == nil || isNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceStatus) GetNamespaceOk() (*string, bool) {
	if o == nil || isNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *V1alpha1ResourceStatus) HasNamespace() bool {
	if o != nil && !isNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *V1alpha1ResourceStatus) SetNamespace(v string) {
	o.Namespace = &v
}

// GetRequiresPruning returns the RequiresPruning field value if set, zero value otherwise.
func (o *V1alpha1ResourceStatus) GetRequiresPruning() bool {
	if o == nil || isNil(o.RequiresPruning) {
		var ret bool
		return ret
	}
	return *o.RequiresPruning
}

// GetRequiresPruningOk returns a tuple with the RequiresPruning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceStatus) GetRequiresPruningOk() (*bool, bool) {
	if o == nil || isNil(o.RequiresPruning) {
		return nil, false
	}
	return o.RequiresPruning, true
}

// HasRequiresPruning returns a boolean if a field has been set.
func (o *V1alpha1ResourceStatus) HasRequiresPruning() bool {
	if o != nil && !isNil(o.RequiresPruning) {
		return true
	}

	return false
}

// SetRequiresPruning gets a reference to the given bool and assigns it to the RequiresPruning field.
func (o *V1alpha1ResourceStatus) SetRequiresPruning(v bool) {
	o.RequiresPruning = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *V1alpha1ResourceStatus) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceStatus) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *V1alpha1ResourceStatus) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *V1alpha1ResourceStatus) SetStatus(v string) {
	o.Status = &v
}

// GetSyncWave returns the SyncWave field value if set, zero value otherwise.
func (o *V1alpha1ResourceStatus) GetSyncWave() string {
	if o == nil || isNil(o.SyncWave) {
		var ret string
		return ret
	}
	return *o.SyncWave
}

// GetSyncWaveOk returns a tuple with the SyncWave field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceStatus) GetSyncWaveOk() (*string, bool) {
	if o == nil || isNil(o.SyncWave) {
		return nil, false
	}
	return o.SyncWave, true
}

// HasSyncWave returns a boolean if a field has been set.
func (o *V1alpha1ResourceStatus) HasSyncWave() bool {
	if o != nil && !isNil(o.SyncWave) {
		return true
	}

	return false
}

// SetSyncWave gets a reference to the given string and assigns it to the SyncWave field.
func (o *V1alpha1ResourceStatus) SetSyncWave(v string) {
	o.SyncWave = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *V1alpha1ResourceStatus) GetVersion() string {
	if o == nil || isNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceStatus) GetVersionOk() (*string, bool) {
	if o == nil || isNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *V1alpha1ResourceStatus) HasVersion() bool {
	if o != nil && !isNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *V1alpha1ResourceStatus) SetVersion(v string) {
	o.Version = &v
}

func (o V1alpha1ResourceStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1alpha1ResourceStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !isNil(o.Health) {
		toSerialize["health"] = o.Health
	}
	if !isNil(o.Hook) {
		toSerialize["hook"] = o.Hook
	}
	if !isNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !isNil(o.RequiresPruning) {
		toSerialize["requiresPruning"] = o.RequiresPruning
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.SyncWave) {
		toSerialize["syncWave"] = o.SyncWave
	}
	if !isNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableV1alpha1ResourceStatus struct {
	value *V1alpha1ResourceStatus
	isSet bool
}

func (v NullableV1alpha1ResourceStatus) Get() *V1alpha1ResourceStatus {
	return v.value
}

func (v *NullableV1alpha1ResourceStatus) Set(val *V1alpha1ResourceStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1ResourceStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1ResourceStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1ResourceStatus(val *V1alpha1ResourceStatus) *NullableV1alpha1ResourceStatus {
	return &NullableV1alpha1ResourceStatus{value: val, isSet: true}
}

func (v NullableV1alpha1ResourceStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1ResourceStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


