/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the V1alpha1ResourceNode type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1alpha1ResourceNode{}

// V1alpha1ResourceNode struct for V1alpha1ResourceNode
type V1alpha1ResourceNode struct {
	CreatedAt *V1Time `json:"createdAt,omitempty"`
	Health *V1alpha1HealthStatus `json:"health,omitempty"`
	Images []string `json:"images,omitempty"`
	Info []V1alpha1InfoItem `json:"info,omitempty"`
	NetworkingInfo *V1alpha1ResourceNetworkingInfo `json:"networkingInfo,omitempty"`
	ParentRefs []V1alpha1ResourceRef `json:"parentRefs,omitempty"`
	ResourceRef *V1alpha1ResourceRef `json:"resourceRef,omitempty"`
	ResourceVersion *string `json:"resourceVersion,omitempty"`
}

// NewV1alpha1ResourceNode instantiates a new V1alpha1ResourceNode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1ResourceNode() *V1alpha1ResourceNode {
	this := V1alpha1ResourceNode{}
	return &this
}

// NewV1alpha1ResourceNodeWithDefaults instantiates a new V1alpha1ResourceNode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1ResourceNodeWithDefaults() *V1alpha1ResourceNode {
	this := V1alpha1ResourceNode{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *V1alpha1ResourceNode) GetCreatedAt() V1Time {
	if o == nil || isNil(o.CreatedAt) {
		var ret V1Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceNode) GetCreatedAtOk() (*V1Time, bool) {
	if o == nil || isNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *V1alpha1ResourceNode) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given V1Time and assigns it to the CreatedAt field.
func (o *V1alpha1ResourceNode) SetCreatedAt(v V1Time) {
	o.CreatedAt = &v
}

// GetHealth returns the Health field value if set, zero value otherwise.
func (o *V1alpha1ResourceNode) GetHealth() V1alpha1HealthStatus {
	if o == nil || isNil(o.Health) {
		var ret V1alpha1HealthStatus
		return ret
	}
	return *o.Health
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceNode) GetHealthOk() (*V1alpha1HealthStatus, bool) {
	if o == nil || isNil(o.Health) {
		return nil, false
	}
	return o.Health, true
}

// HasHealth returns a boolean if a field has been set.
func (o *V1alpha1ResourceNode) HasHealth() bool {
	if o != nil && !isNil(o.Health) {
		return true
	}

	return false
}

// SetHealth gets a reference to the given V1alpha1HealthStatus and assigns it to the Health field.
func (o *V1alpha1ResourceNode) SetHealth(v V1alpha1HealthStatus) {
	o.Health = &v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *V1alpha1ResourceNode) GetImages() []string {
	if o == nil || isNil(o.Images) {
		var ret []string
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceNode) GetImagesOk() ([]string, bool) {
	if o == nil || isNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *V1alpha1ResourceNode) HasImages() bool {
	if o != nil && !isNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []string and assigns it to the Images field.
func (o *V1alpha1ResourceNode) SetImages(v []string) {
	o.Images = v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *V1alpha1ResourceNode) GetInfo() []V1alpha1InfoItem {
	if o == nil || isNil(o.Info) {
		var ret []V1alpha1InfoItem
		return ret
	}
	return o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceNode) GetInfoOk() ([]V1alpha1InfoItem, bool) {
	if o == nil || isNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *V1alpha1ResourceNode) HasInfo() bool {
	if o != nil && !isNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given []V1alpha1InfoItem and assigns it to the Info field.
func (o *V1alpha1ResourceNode) SetInfo(v []V1alpha1InfoItem) {
	o.Info = v
}

// GetNetworkingInfo returns the NetworkingInfo field value if set, zero value otherwise.
func (o *V1alpha1ResourceNode) GetNetworkingInfo() V1alpha1ResourceNetworkingInfo {
	if o == nil || isNil(o.NetworkingInfo) {
		var ret V1alpha1ResourceNetworkingInfo
		return ret
	}
	return *o.NetworkingInfo
}

// GetNetworkingInfoOk returns a tuple with the NetworkingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceNode) GetNetworkingInfoOk() (*V1alpha1ResourceNetworkingInfo, bool) {
	if o == nil || isNil(o.NetworkingInfo) {
		return nil, false
	}
	return o.NetworkingInfo, true
}

// HasNetworkingInfo returns a boolean if a field has been set.
func (o *V1alpha1ResourceNode) HasNetworkingInfo() bool {
	if o != nil && !isNil(o.NetworkingInfo) {
		return true
	}

	return false
}

// SetNetworkingInfo gets a reference to the given V1alpha1ResourceNetworkingInfo and assigns it to the NetworkingInfo field.
func (o *V1alpha1ResourceNode) SetNetworkingInfo(v V1alpha1ResourceNetworkingInfo) {
	o.NetworkingInfo = &v
}

// GetParentRefs returns the ParentRefs field value if set, zero value otherwise.
func (o *V1alpha1ResourceNode) GetParentRefs() []V1alpha1ResourceRef {
	if o == nil || isNil(o.ParentRefs) {
		var ret []V1alpha1ResourceRef
		return ret
	}
	return o.ParentRefs
}

// GetParentRefsOk returns a tuple with the ParentRefs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceNode) GetParentRefsOk() ([]V1alpha1ResourceRef, bool) {
	if o == nil || isNil(o.ParentRefs) {
		return nil, false
	}
	return o.ParentRefs, true
}

// HasParentRefs returns a boolean if a field has been set.
func (o *V1alpha1ResourceNode) HasParentRefs() bool {
	if o != nil && !isNil(o.ParentRefs) {
		return true
	}

	return false
}

// SetParentRefs gets a reference to the given []V1alpha1ResourceRef and assigns it to the ParentRefs field.
func (o *V1alpha1ResourceNode) SetParentRefs(v []V1alpha1ResourceRef) {
	o.ParentRefs = v
}

// GetResourceRef returns the ResourceRef field value if set, zero value otherwise.
func (o *V1alpha1ResourceNode) GetResourceRef() V1alpha1ResourceRef {
	if o == nil || isNil(o.ResourceRef) {
		var ret V1alpha1ResourceRef
		return ret
	}
	return *o.ResourceRef
}

// GetResourceRefOk returns a tuple with the ResourceRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceNode) GetResourceRefOk() (*V1alpha1ResourceRef, bool) {
	if o == nil || isNil(o.ResourceRef) {
		return nil, false
	}
	return o.ResourceRef, true
}

// HasResourceRef returns a boolean if a field has been set.
func (o *V1alpha1ResourceNode) HasResourceRef() bool {
	if o != nil && !isNil(o.ResourceRef) {
		return true
	}

	return false
}

// SetResourceRef gets a reference to the given V1alpha1ResourceRef and assigns it to the ResourceRef field.
func (o *V1alpha1ResourceNode) SetResourceRef(v V1alpha1ResourceRef) {
	o.ResourceRef = &v
}

// GetResourceVersion returns the ResourceVersion field value if set, zero value otherwise.
func (o *V1alpha1ResourceNode) GetResourceVersion() string {
	if o == nil || isNil(o.ResourceVersion) {
		var ret string
		return ret
	}
	return *o.ResourceVersion
}

// GetResourceVersionOk returns a tuple with the ResourceVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceNode) GetResourceVersionOk() (*string, bool) {
	if o == nil || isNil(o.ResourceVersion) {
		return nil, false
	}
	return o.ResourceVersion, true
}

// HasResourceVersion returns a boolean if a field has been set.
func (o *V1alpha1ResourceNode) HasResourceVersion() bool {
	if o != nil && !isNil(o.ResourceVersion) {
		return true
	}

	return false
}

// SetResourceVersion gets a reference to the given string and assigns it to the ResourceVersion field.
func (o *V1alpha1ResourceNode) SetResourceVersion(v string) {
	o.ResourceVersion = &v
}

func (o V1alpha1ResourceNode) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1alpha1ResourceNode) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !isNil(o.Health) {
		toSerialize["health"] = o.Health
	}
	if !isNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	if !isNil(o.Info) {
		toSerialize["info"] = o.Info
	}
	if !isNil(o.NetworkingInfo) {
		toSerialize["networkingInfo"] = o.NetworkingInfo
	}
	if !isNil(o.ParentRefs) {
		toSerialize["parentRefs"] = o.ParentRefs
	}
	if !isNil(o.ResourceRef) {
		toSerialize["resourceRef"] = o.ResourceRef
	}
	if !isNil(o.ResourceVersion) {
		toSerialize["resourceVersion"] = o.ResourceVersion
	}
	return toSerialize, nil
}

type NullableV1alpha1ResourceNode struct {
	value *V1alpha1ResourceNode
	isSet bool
}

func (v NullableV1alpha1ResourceNode) Get() *V1alpha1ResourceNode {
	return v.value
}

func (v *NullableV1alpha1ResourceNode) Set(val *V1alpha1ResourceNode) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1ResourceNode) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1ResourceNode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1ResourceNode(val *V1alpha1ResourceNode) *NullableV1alpha1ResourceNode {
	return &NullableV1alpha1ResourceNode{value: val, isSet: true}
}

func (v NullableV1alpha1ResourceNode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1ResourceNode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


