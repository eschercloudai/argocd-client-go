/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the V1alpha1ApplicationSourceHelm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1alpha1ApplicationSourceHelm{}

// V1alpha1ApplicationSourceHelm struct for V1alpha1ApplicationSourceHelm
type V1alpha1ApplicationSourceHelm struct {
	FileParameters []V1alpha1HelmFileParameter `json:"fileParameters,omitempty"`
	IgnoreMissingValueFiles *bool `json:"ignoreMissingValueFiles,omitempty"`
	Parameters []V1alpha1HelmParameter `json:"parameters,omitempty"`
	PassCredentials *bool `json:"passCredentials,omitempty"`
	ReleaseName *string `json:"releaseName,omitempty"`
	SkipCrds *bool `json:"skipCrds,omitempty"`
	ValueFiles []string `json:"valueFiles,omitempty"`
	Values *string `json:"values,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewV1alpha1ApplicationSourceHelm instantiates a new V1alpha1ApplicationSourceHelm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1ApplicationSourceHelm() *V1alpha1ApplicationSourceHelm {
	this := V1alpha1ApplicationSourceHelm{}
	return &this
}

// NewV1alpha1ApplicationSourceHelmWithDefaults instantiates a new V1alpha1ApplicationSourceHelm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1ApplicationSourceHelmWithDefaults() *V1alpha1ApplicationSourceHelm {
	this := V1alpha1ApplicationSourceHelm{}
	return &this
}

// GetFileParameters returns the FileParameters field value if set, zero value otherwise.
func (o *V1alpha1ApplicationSourceHelm) GetFileParameters() []V1alpha1HelmFileParameter {
	if o == nil || isNil(o.FileParameters) {
		var ret []V1alpha1HelmFileParameter
		return ret
	}
	return o.FileParameters
}

// GetFileParametersOk returns a tuple with the FileParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ApplicationSourceHelm) GetFileParametersOk() ([]V1alpha1HelmFileParameter, bool) {
	if o == nil || isNil(o.FileParameters) {
		return nil, false
	}
	return o.FileParameters, true
}

// HasFileParameters returns a boolean if a field has been set.
func (o *V1alpha1ApplicationSourceHelm) HasFileParameters() bool {
	if o != nil && !isNil(o.FileParameters) {
		return true
	}

	return false
}

// SetFileParameters gets a reference to the given []V1alpha1HelmFileParameter and assigns it to the FileParameters field.
func (o *V1alpha1ApplicationSourceHelm) SetFileParameters(v []V1alpha1HelmFileParameter) {
	o.FileParameters = v
}

// GetIgnoreMissingValueFiles returns the IgnoreMissingValueFiles field value if set, zero value otherwise.
func (o *V1alpha1ApplicationSourceHelm) GetIgnoreMissingValueFiles() bool {
	if o == nil || isNil(o.IgnoreMissingValueFiles) {
		var ret bool
		return ret
	}
	return *o.IgnoreMissingValueFiles
}

// GetIgnoreMissingValueFilesOk returns a tuple with the IgnoreMissingValueFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ApplicationSourceHelm) GetIgnoreMissingValueFilesOk() (*bool, bool) {
	if o == nil || isNil(o.IgnoreMissingValueFiles) {
		return nil, false
	}
	return o.IgnoreMissingValueFiles, true
}

// HasIgnoreMissingValueFiles returns a boolean if a field has been set.
func (o *V1alpha1ApplicationSourceHelm) HasIgnoreMissingValueFiles() bool {
	if o != nil && !isNil(o.IgnoreMissingValueFiles) {
		return true
	}

	return false
}

// SetIgnoreMissingValueFiles gets a reference to the given bool and assigns it to the IgnoreMissingValueFiles field.
func (o *V1alpha1ApplicationSourceHelm) SetIgnoreMissingValueFiles(v bool) {
	o.IgnoreMissingValueFiles = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *V1alpha1ApplicationSourceHelm) GetParameters() []V1alpha1HelmParameter {
	if o == nil || isNil(o.Parameters) {
		var ret []V1alpha1HelmParameter
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ApplicationSourceHelm) GetParametersOk() ([]V1alpha1HelmParameter, bool) {
	if o == nil || isNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *V1alpha1ApplicationSourceHelm) HasParameters() bool {
	if o != nil && !isNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []V1alpha1HelmParameter and assigns it to the Parameters field.
func (o *V1alpha1ApplicationSourceHelm) SetParameters(v []V1alpha1HelmParameter) {
	o.Parameters = v
}

// GetPassCredentials returns the PassCredentials field value if set, zero value otherwise.
func (o *V1alpha1ApplicationSourceHelm) GetPassCredentials() bool {
	if o == nil || isNil(o.PassCredentials) {
		var ret bool
		return ret
	}
	return *o.PassCredentials
}

// GetPassCredentialsOk returns a tuple with the PassCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ApplicationSourceHelm) GetPassCredentialsOk() (*bool, bool) {
	if o == nil || isNil(o.PassCredentials) {
		return nil, false
	}
	return o.PassCredentials, true
}

// HasPassCredentials returns a boolean if a field has been set.
func (o *V1alpha1ApplicationSourceHelm) HasPassCredentials() bool {
	if o != nil && !isNil(o.PassCredentials) {
		return true
	}

	return false
}

// SetPassCredentials gets a reference to the given bool and assigns it to the PassCredentials field.
func (o *V1alpha1ApplicationSourceHelm) SetPassCredentials(v bool) {
	o.PassCredentials = &v
}

// GetReleaseName returns the ReleaseName field value if set, zero value otherwise.
func (o *V1alpha1ApplicationSourceHelm) GetReleaseName() string {
	if o == nil || isNil(o.ReleaseName) {
		var ret string
		return ret
	}
	return *o.ReleaseName
}

// GetReleaseNameOk returns a tuple with the ReleaseName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ApplicationSourceHelm) GetReleaseNameOk() (*string, bool) {
	if o == nil || isNil(o.ReleaseName) {
		return nil, false
	}
	return o.ReleaseName, true
}

// HasReleaseName returns a boolean if a field has been set.
func (o *V1alpha1ApplicationSourceHelm) HasReleaseName() bool {
	if o != nil && !isNil(o.ReleaseName) {
		return true
	}

	return false
}

// SetReleaseName gets a reference to the given string and assigns it to the ReleaseName field.
func (o *V1alpha1ApplicationSourceHelm) SetReleaseName(v string) {
	o.ReleaseName = &v
}

// GetSkipCrds returns the SkipCrds field value if set, zero value otherwise.
func (o *V1alpha1ApplicationSourceHelm) GetSkipCrds() bool {
	if o == nil || isNil(o.SkipCrds) {
		var ret bool
		return ret
	}
	return *o.SkipCrds
}

// GetSkipCrdsOk returns a tuple with the SkipCrds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ApplicationSourceHelm) GetSkipCrdsOk() (*bool, bool) {
	if o == nil || isNil(o.SkipCrds) {
		return nil, false
	}
	return o.SkipCrds, true
}

// HasSkipCrds returns a boolean if a field has been set.
func (o *V1alpha1ApplicationSourceHelm) HasSkipCrds() bool {
	if o != nil && !isNil(o.SkipCrds) {
		return true
	}

	return false
}

// SetSkipCrds gets a reference to the given bool and assigns it to the SkipCrds field.
func (o *V1alpha1ApplicationSourceHelm) SetSkipCrds(v bool) {
	o.SkipCrds = &v
}

// GetValueFiles returns the ValueFiles field value if set, zero value otherwise.
func (o *V1alpha1ApplicationSourceHelm) GetValueFiles() []string {
	if o == nil || isNil(o.ValueFiles) {
		var ret []string
		return ret
	}
	return o.ValueFiles
}

// GetValueFilesOk returns a tuple with the ValueFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ApplicationSourceHelm) GetValueFilesOk() ([]string, bool) {
	if o == nil || isNil(o.ValueFiles) {
		return nil, false
	}
	return o.ValueFiles, true
}

// HasValueFiles returns a boolean if a field has been set.
func (o *V1alpha1ApplicationSourceHelm) HasValueFiles() bool {
	if o != nil && !isNil(o.ValueFiles) {
		return true
	}

	return false
}

// SetValueFiles gets a reference to the given []string and assigns it to the ValueFiles field.
func (o *V1alpha1ApplicationSourceHelm) SetValueFiles(v []string) {
	o.ValueFiles = v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *V1alpha1ApplicationSourceHelm) GetValues() string {
	if o == nil || isNil(o.Values) {
		var ret string
		return ret
	}
	return *o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ApplicationSourceHelm) GetValuesOk() (*string, bool) {
	if o == nil || isNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *V1alpha1ApplicationSourceHelm) HasValues() bool {
	if o != nil && !isNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given string and assigns it to the Values field.
func (o *V1alpha1ApplicationSourceHelm) SetValues(v string) {
	o.Values = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *V1alpha1ApplicationSourceHelm) GetVersion() string {
	if o == nil || isNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ApplicationSourceHelm) GetVersionOk() (*string, bool) {
	if o == nil || isNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *V1alpha1ApplicationSourceHelm) HasVersion() bool {
	if o != nil && !isNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *V1alpha1ApplicationSourceHelm) SetVersion(v string) {
	o.Version = &v
}

func (o V1alpha1ApplicationSourceHelm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1alpha1ApplicationSourceHelm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.FileParameters) {
		toSerialize["fileParameters"] = o.FileParameters
	}
	if !isNil(o.IgnoreMissingValueFiles) {
		toSerialize["ignoreMissingValueFiles"] = o.IgnoreMissingValueFiles
	}
	if !isNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !isNil(o.PassCredentials) {
		toSerialize["passCredentials"] = o.PassCredentials
	}
	if !isNil(o.ReleaseName) {
		toSerialize["releaseName"] = o.ReleaseName
	}
	if !isNil(o.SkipCrds) {
		toSerialize["skipCrds"] = o.SkipCrds
	}
	if !isNil(o.ValueFiles) {
		toSerialize["valueFiles"] = o.ValueFiles
	}
	if !isNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	if !isNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableV1alpha1ApplicationSourceHelm struct {
	value *V1alpha1ApplicationSourceHelm
	isSet bool
}

func (v NullableV1alpha1ApplicationSourceHelm) Get() *V1alpha1ApplicationSourceHelm {
	return v.value
}

func (v *NullableV1alpha1ApplicationSourceHelm) Set(val *V1alpha1ApplicationSourceHelm) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1ApplicationSourceHelm) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1ApplicationSourceHelm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1ApplicationSourceHelm(val *V1alpha1ApplicationSourceHelm) *NullableV1alpha1ApplicationSourceHelm {
	return &NullableV1alpha1ApplicationSourceHelm{value: val, isSet: true}
}

func (v NullableV1alpha1ApplicationSourceHelm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1ApplicationSourceHelm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


