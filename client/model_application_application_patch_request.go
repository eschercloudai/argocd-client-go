/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ApplicationApplicationPatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationApplicationPatchRequest{}

// ApplicationApplicationPatchRequest struct for ApplicationApplicationPatchRequest
type ApplicationApplicationPatchRequest struct {
	AppNamespace *string `json:"appNamespace,omitempty"`
	Name *string `json:"name,omitempty"`
	Patch *string `json:"patch,omitempty"`
	PatchType *string `json:"patchType,omitempty"`
}

// NewApplicationApplicationPatchRequest instantiates a new ApplicationApplicationPatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationApplicationPatchRequest() *ApplicationApplicationPatchRequest {
	this := ApplicationApplicationPatchRequest{}
	return &this
}

// NewApplicationApplicationPatchRequestWithDefaults instantiates a new ApplicationApplicationPatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationApplicationPatchRequestWithDefaults() *ApplicationApplicationPatchRequest {
	this := ApplicationApplicationPatchRequest{}
	return &this
}

// GetAppNamespace returns the AppNamespace field value if set, zero value otherwise.
func (o *ApplicationApplicationPatchRequest) GetAppNamespace() string {
	if o == nil || isNil(o.AppNamespace) {
		var ret string
		return ret
	}
	return *o.AppNamespace
}

// GetAppNamespaceOk returns a tuple with the AppNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationApplicationPatchRequest) GetAppNamespaceOk() (*string, bool) {
	if o == nil || isNil(o.AppNamespace) {
		return nil, false
	}
	return o.AppNamespace, true
}

// HasAppNamespace returns a boolean if a field has been set.
func (o *ApplicationApplicationPatchRequest) HasAppNamespace() bool {
	if o != nil && !isNil(o.AppNamespace) {
		return true
	}

	return false
}

// SetAppNamespace gets a reference to the given string and assigns it to the AppNamespace field.
func (o *ApplicationApplicationPatchRequest) SetAppNamespace(v string) {
	o.AppNamespace = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApplicationApplicationPatchRequest) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationApplicationPatchRequest) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApplicationApplicationPatchRequest) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApplicationApplicationPatchRequest) SetName(v string) {
	o.Name = &v
}

// GetPatch returns the Patch field value if set, zero value otherwise.
func (o *ApplicationApplicationPatchRequest) GetPatch() string {
	if o == nil || isNil(o.Patch) {
		var ret string
		return ret
	}
	return *o.Patch
}

// GetPatchOk returns a tuple with the Patch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationApplicationPatchRequest) GetPatchOk() (*string, bool) {
	if o == nil || isNil(o.Patch) {
		return nil, false
	}
	return o.Patch, true
}

// HasPatch returns a boolean if a field has been set.
func (o *ApplicationApplicationPatchRequest) HasPatch() bool {
	if o != nil && !isNil(o.Patch) {
		return true
	}

	return false
}

// SetPatch gets a reference to the given string and assigns it to the Patch field.
func (o *ApplicationApplicationPatchRequest) SetPatch(v string) {
	o.Patch = &v
}

// GetPatchType returns the PatchType field value if set, zero value otherwise.
func (o *ApplicationApplicationPatchRequest) GetPatchType() string {
	if o == nil || isNil(o.PatchType) {
		var ret string
		return ret
	}
	return *o.PatchType
}

// GetPatchTypeOk returns a tuple with the PatchType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationApplicationPatchRequest) GetPatchTypeOk() (*string, bool) {
	if o == nil || isNil(o.PatchType) {
		return nil, false
	}
	return o.PatchType, true
}

// HasPatchType returns a boolean if a field has been set.
func (o *ApplicationApplicationPatchRequest) HasPatchType() bool {
	if o != nil && !isNil(o.PatchType) {
		return true
	}

	return false
}

// SetPatchType gets a reference to the given string and assigns it to the PatchType field.
func (o *ApplicationApplicationPatchRequest) SetPatchType(v string) {
	o.PatchType = &v
}

func (o ApplicationApplicationPatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationApplicationPatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AppNamespace) {
		toSerialize["appNamespace"] = o.AppNamespace
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Patch) {
		toSerialize["patch"] = o.Patch
	}
	if !isNil(o.PatchType) {
		toSerialize["patchType"] = o.PatchType
	}
	return toSerialize, nil
}

type NullableApplicationApplicationPatchRequest struct {
	value *ApplicationApplicationPatchRequest
	isSet bool
}

func (v NullableApplicationApplicationPatchRequest) Get() *ApplicationApplicationPatchRequest {
	return v.value
}

func (v *NullableApplicationApplicationPatchRequest) Set(val *ApplicationApplicationPatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationApplicationPatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationApplicationPatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationApplicationPatchRequest(val *ApplicationApplicationPatchRequest) *NullableApplicationApplicationPatchRequest {
	return &NullableApplicationApplicationPatchRequest{value: val, isSet: true}
}

func (v NullableApplicationApplicationPatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationApplicationPatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


