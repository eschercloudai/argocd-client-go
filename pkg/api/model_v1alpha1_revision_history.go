/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the V1alpha1RevisionHistory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1alpha1RevisionHistory{}

// V1alpha1RevisionHistory struct for V1alpha1RevisionHistory
type V1alpha1RevisionHistory struct {
	DeployStartedAt *string                    `json:"deployStartedAt,omitempty"`
	DeployedAt      *string                    `json:"deployedAt,omitempty"`
	Id              *string                    `json:"id,omitempty"`
	Revision        *string                    `json:"revision,omitempty"`
	Source          *V1alpha1ApplicationSource `json:"source,omitempty"`
}

// NewV1alpha1RevisionHistory instantiates a new V1alpha1RevisionHistory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1RevisionHistory() *V1alpha1RevisionHistory {
	this := V1alpha1RevisionHistory{}
	return &this
}

// NewV1alpha1RevisionHistoryWithDefaults instantiates a new V1alpha1RevisionHistory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1RevisionHistoryWithDefaults() *V1alpha1RevisionHistory {
	this := V1alpha1RevisionHistory{}
	return &this
}

// GetDeployStartedAt returns the DeployStartedAt field value if set, zero value otherwise.
func (o *V1alpha1RevisionHistory) GetDeployStartedAt() string {
	if o == nil || isNil(o.DeployStartedAt) {
		var ret string
		return ret
	}
	return *o.DeployStartedAt
}

// GetDeployStartedAtOk returns a tuple with the DeployStartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1RevisionHistory) GetDeployStartedAtOk() (*string, bool) {
	if o == nil || isNil(o.DeployStartedAt) {
		return nil, false
	}
	return o.DeployStartedAt, true
}

// HasDeployStartedAt returns a boolean if a field has been set.
func (o *V1alpha1RevisionHistory) HasDeployStartedAt() bool {
	if o != nil && !isNil(o.DeployStartedAt) {
		return true
	}

	return false
}

// SetDeployStartedAt gets a reference to the given string and assigns it to the DeployStartedAt field.
func (o *V1alpha1RevisionHistory) SetDeployStartedAt(v string) {
	o.DeployStartedAt = &v
}

// GetDeployedAt returns the DeployedAt field value if set, zero value otherwise.
func (o *V1alpha1RevisionHistory) GetDeployedAt() string {
	if o == nil || isNil(o.DeployedAt) {
		var ret string
		return ret
	}
	return *o.DeployedAt
}

// GetDeployedAtOk returns a tuple with the DeployedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1RevisionHistory) GetDeployedAtOk() (*string, bool) {
	if o == nil || isNil(o.DeployedAt) {
		return nil, false
	}
	return o.DeployedAt, true
}

// HasDeployedAt returns a boolean if a field has been set.
func (o *V1alpha1RevisionHistory) HasDeployedAt() bool {
	if o != nil && !isNil(o.DeployedAt) {
		return true
	}

	return false
}

// SetDeployedAt gets a reference to the given string and assigns it to the DeployedAt field.
func (o *V1alpha1RevisionHistory) SetDeployedAt(v string) {
	o.DeployedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V1alpha1RevisionHistory) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1RevisionHistory) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V1alpha1RevisionHistory) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *V1alpha1RevisionHistory) SetId(v string) {
	o.Id = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *V1alpha1RevisionHistory) GetRevision() string {
	if o == nil || isNil(o.Revision) {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1RevisionHistory) GetRevisionOk() (*string, bool) {
	if o == nil || isNil(o.Revision) {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *V1alpha1RevisionHistory) HasRevision() bool {
	if o != nil && !isNil(o.Revision) {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *V1alpha1RevisionHistory) SetRevision(v string) {
	o.Revision = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *V1alpha1RevisionHistory) GetSource() V1alpha1ApplicationSource {
	if o == nil || isNil(o.Source) {
		var ret V1alpha1ApplicationSource
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1RevisionHistory) GetSourceOk() (*V1alpha1ApplicationSource, bool) {
	if o == nil || isNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *V1alpha1RevisionHistory) HasSource() bool {
	if o != nil && !isNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given V1alpha1ApplicationSource and assigns it to the Source field.
func (o *V1alpha1RevisionHistory) SetSource(v V1alpha1ApplicationSource) {
	o.Source = &v
}

func (o V1alpha1RevisionHistory) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1alpha1RevisionHistory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DeployStartedAt) {
		toSerialize["deployStartedAt"] = o.DeployStartedAt
	}
	if !isNil(o.DeployedAt) {
		toSerialize["deployedAt"] = o.DeployedAt
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Revision) {
		toSerialize["revision"] = o.Revision
	}
	if !isNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	return toSerialize, nil
}

type NullableV1alpha1RevisionHistory struct {
	value *V1alpha1RevisionHistory
	isSet bool
}

func (v NullableV1alpha1RevisionHistory) Get() *V1alpha1RevisionHistory {
	return v.value
}

func (v *NullableV1alpha1RevisionHistory) Set(val *V1alpha1RevisionHistory) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1RevisionHistory) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1RevisionHistory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1RevisionHistory(val *V1alpha1RevisionHistory) *NullableV1alpha1RevisionHistory {
	return &NullableV1alpha1RevisionHistory{value: val, isSet: true}
}

func (v NullableV1alpha1RevisionHistory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1RevisionHistory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
