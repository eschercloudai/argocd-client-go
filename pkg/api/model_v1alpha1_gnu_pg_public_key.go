/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the V1alpha1GnuPGPublicKey type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1alpha1GnuPGPublicKey{}

// V1alpha1GnuPGPublicKey struct for V1alpha1GnuPGPublicKey
type V1alpha1GnuPGPublicKey struct {
	Fingerprint *string `json:"fingerprint,omitempty"`
	KeyData     *string `json:"keyData,omitempty"`
	KeyID       *string `json:"keyID,omitempty"`
	Owner       *string `json:"owner,omitempty"`
	SubType     *string `json:"subType,omitempty"`
	Trust       *string `json:"trust,omitempty"`
}

// NewV1alpha1GnuPGPublicKey instantiates a new V1alpha1GnuPGPublicKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1GnuPGPublicKey() *V1alpha1GnuPGPublicKey {
	this := V1alpha1GnuPGPublicKey{}
	return &this
}

// NewV1alpha1GnuPGPublicKeyWithDefaults instantiates a new V1alpha1GnuPGPublicKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1GnuPGPublicKeyWithDefaults() *V1alpha1GnuPGPublicKey {
	this := V1alpha1GnuPGPublicKey{}
	return &this
}

// GetFingerprint returns the Fingerprint field value if set, zero value otherwise.
func (o *V1alpha1GnuPGPublicKey) GetFingerprint() string {
	if o == nil || isNil(o.Fingerprint) {
		var ret string
		return ret
	}
	return *o.Fingerprint
}

// GetFingerprintOk returns a tuple with the Fingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1GnuPGPublicKey) GetFingerprintOk() (*string, bool) {
	if o == nil || isNil(o.Fingerprint) {
		return nil, false
	}
	return o.Fingerprint, true
}

// HasFingerprint returns a boolean if a field has been set.
func (o *V1alpha1GnuPGPublicKey) HasFingerprint() bool {
	if o != nil && !isNil(o.Fingerprint) {
		return true
	}

	return false
}

// SetFingerprint gets a reference to the given string and assigns it to the Fingerprint field.
func (o *V1alpha1GnuPGPublicKey) SetFingerprint(v string) {
	o.Fingerprint = &v
}

// GetKeyData returns the KeyData field value if set, zero value otherwise.
func (o *V1alpha1GnuPGPublicKey) GetKeyData() string {
	if o == nil || isNil(o.KeyData) {
		var ret string
		return ret
	}
	return *o.KeyData
}

// GetKeyDataOk returns a tuple with the KeyData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1GnuPGPublicKey) GetKeyDataOk() (*string, bool) {
	if o == nil || isNil(o.KeyData) {
		return nil, false
	}
	return o.KeyData, true
}

// HasKeyData returns a boolean if a field has been set.
func (o *V1alpha1GnuPGPublicKey) HasKeyData() bool {
	if o != nil && !isNil(o.KeyData) {
		return true
	}

	return false
}

// SetKeyData gets a reference to the given string and assigns it to the KeyData field.
func (o *V1alpha1GnuPGPublicKey) SetKeyData(v string) {
	o.KeyData = &v
}

// GetKeyID returns the KeyID field value if set, zero value otherwise.
func (o *V1alpha1GnuPGPublicKey) GetKeyID() string {
	if o == nil || isNil(o.KeyID) {
		var ret string
		return ret
	}
	return *o.KeyID
}

// GetKeyIDOk returns a tuple with the KeyID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1GnuPGPublicKey) GetKeyIDOk() (*string, bool) {
	if o == nil || isNil(o.KeyID) {
		return nil, false
	}
	return o.KeyID, true
}

// HasKeyID returns a boolean if a field has been set.
func (o *V1alpha1GnuPGPublicKey) HasKeyID() bool {
	if o != nil && !isNil(o.KeyID) {
		return true
	}

	return false
}

// SetKeyID gets a reference to the given string and assigns it to the KeyID field.
func (o *V1alpha1GnuPGPublicKey) SetKeyID(v string) {
	o.KeyID = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *V1alpha1GnuPGPublicKey) GetOwner() string {
	if o == nil || isNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1GnuPGPublicKey) GetOwnerOk() (*string, bool) {
	if o == nil || isNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *V1alpha1GnuPGPublicKey) HasOwner() bool {
	if o != nil && !isNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *V1alpha1GnuPGPublicKey) SetOwner(v string) {
	o.Owner = &v
}

// GetSubType returns the SubType field value if set, zero value otherwise.
func (o *V1alpha1GnuPGPublicKey) GetSubType() string {
	if o == nil || isNil(o.SubType) {
		var ret string
		return ret
	}
	return *o.SubType
}

// GetSubTypeOk returns a tuple with the SubType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1GnuPGPublicKey) GetSubTypeOk() (*string, bool) {
	if o == nil || isNil(o.SubType) {
		return nil, false
	}
	return o.SubType, true
}

// HasSubType returns a boolean if a field has been set.
func (o *V1alpha1GnuPGPublicKey) HasSubType() bool {
	if o != nil && !isNil(o.SubType) {
		return true
	}

	return false
}

// SetSubType gets a reference to the given string and assigns it to the SubType field.
func (o *V1alpha1GnuPGPublicKey) SetSubType(v string) {
	o.SubType = &v
}

// GetTrust returns the Trust field value if set, zero value otherwise.
func (o *V1alpha1GnuPGPublicKey) GetTrust() string {
	if o == nil || isNil(o.Trust) {
		var ret string
		return ret
	}
	return *o.Trust
}

// GetTrustOk returns a tuple with the Trust field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1GnuPGPublicKey) GetTrustOk() (*string, bool) {
	if o == nil || isNil(o.Trust) {
		return nil, false
	}
	return o.Trust, true
}

// HasTrust returns a boolean if a field has been set.
func (o *V1alpha1GnuPGPublicKey) HasTrust() bool {
	if o != nil && !isNil(o.Trust) {
		return true
	}

	return false
}

// SetTrust gets a reference to the given string and assigns it to the Trust field.
func (o *V1alpha1GnuPGPublicKey) SetTrust(v string) {
	o.Trust = &v
}

func (o V1alpha1GnuPGPublicKey) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1alpha1GnuPGPublicKey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Fingerprint) {
		toSerialize["fingerprint"] = o.Fingerprint
	}
	if !isNil(o.KeyData) {
		toSerialize["keyData"] = o.KeyData
	}
	if !isNil(o.KeyID) {
		toSerialize["keyID"] = o.KeyID
	}
	if !isNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !isNil(o.SubType) {
		toSerialize["subType"] = o.SubType
	}
	if !isNil(o.Trust) {
		toSerialize["trust"] = o.Trust
	}
	return toSerialize, nil
}

type NullableV1alpha1GnuPGPublicKey struct {
	value *V1alpha1GnuPGPublicKey
	isSet bool
}

func (v NullableV1alpha1GnuPGPublicKey) Get() *V1alpha1GnuPGPublicKey {
	return v.value
}

func (v *NullableV1alpha1GnuPGPublicKey) Set(val *V1alpha1GnuPGPublicKey) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1GnuPGPublicKey) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1GnuPGPublicKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1GnuPGPublicKey(val *V1alpha1GnuPGPublicKey) *NullableV1alpha1GnuPGPublicKey {
	return &NullableV1alpha1GnuPGPublicKey{value: val, isSet: true}
}

func (v NullableV1alpha1GnuPGPublicKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1GnuPGPublicKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
