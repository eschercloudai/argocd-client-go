/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ProjectProjectUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectProjectUpdateRequest{}

// ProjectProjectUpdateRequest struct for ProjectProjectUpdateRequest
type ProjectProjectUpdateRequest struct {
	Project *V1alpha1AppProject `json:"project,omitempty"`
}

// NewProjectProjectUpdateRequest instantiates a new ProjectProjectUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectProjectUpdateRequest() *ProjectProjectUpdateRequest {
	this := ProjectProjectUpdateRequest{}
	return &this
}

// NewProjectProjectUpdateRequestWithDefaults instantiates a new ProjectProjectUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectProjectUpdateRequestWithDefaults() *ProjectProjectUpdateRequest {
	this := ProjectProjectUpdateRequest{}
	return &this
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *ProjectProjectUpdateRequest) GetProject() V1alpha1AppProject {
	if o == nil || isNil(o.Project) {
		var ret V1alpha1AppProject
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectProjectUpdateRequest) GetProjectOk() (*V1alpha1AppProject, bool) {
	if o == nil || isNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *ProjectProjectUpdateRequest) HasProject() bool {
	if o != nil && !isNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given V1alpha1AppProject and assigns it to the Project field.
func (o *ProjectProjectUpdateRequest) SetProject(v V1alpha1AppProject) {
	o.Project = &v
}

func (o ProjectProjectUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectProjectUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	return toSerialize, nil
}

type NullableProjectProjectUpdateRequest struct {
	value *ProjectProjectUpdateRequest
	isSet bool
}

func (v NullableProjectProjectUpdateRequest) Get() *ProjectProjectUpdateRequest {
	return v.value
}

func (v *NullableProjectProjectUpdateRequest) Set(val *ProjectProjectUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectProjectUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectProjectUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectProjectUpdateRequest(val *ProjectProjectUpdateRequest) *NullableProjectProjectUpdateRequest {
	return &NullableProjectProjectUpdateRequest{value: val, isSet: true}
}

func (v NullableProjectProjectUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectProjectUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
