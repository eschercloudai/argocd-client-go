/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the ApplicationLogEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationLogEntry{}

// ApplicationLogEntry struct for ApplicationLogEntry
type ApplicationLogEntry struct {
	Content      *string `json:"content,omitempty"`
	Last         *bool   `json:"last,omitempty"`
	PodName      *string `json:"podName,omitempty"`
	TimeStamp    *string `json:"timeStamp,omitempty"`
	TimeStampStr *string `json:"timeStampStr,omitempty"`
}

// NewApplicationLogEntry instantiates a new ApplicationLogEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationLogEntry() *ApplicationLogEntry {
	this := ApplicationLogEntry{}
	return &this
}

// NewApplicationLogEntryWithDefaults instantiates a new ApplicationLogEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationLogEntryWithDefaults() *ApplicationLogEntry {
	this := ApplicationLogEntry{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *ApplicationLogEntry) GetContent() string {
	if o == nil || isNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationLogEntry) GetContentOk() (*string, bool) {
	if o == nil || isNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *ApplicationLogEntry) HasContent() bool {
	if o != nil && !isNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *ApplicationLogEntry) SetContent(v string) {
	o.Content = &v
}

// GetLast returns the Last field value if set, zero value otherwise.
func (o *ApplicationLogEntry) GetLast() bool {
	if o == nil || isNil(o.Last) {
		var ret bool
		return ret
	}
	return *o.Last
}

// GetLastOk returns a tuple with the Last field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationLogEntry) GetLastOk() (*bool, bool) {
	if o == nil || isNil(o.Last) {
		return nil, false
	}
	return o.Last, true
}

// HasLast returns a boolean if a field has been set.
func (o *ApplicationLogEntry) HasLast() bool {
	if o != nil && !isNil(o.Last) {
		return true
	}

	return false
}

// SetLast gets a reference to the given bool and assigns it to the Last field.
func (o *ApplicationLogEntry) SetLast(v bool) {
	o.Last = &v
}

// GetPodName returns the PodName field value if set, zero value otherwise.
func (o *ApplicationLogEntry) GetPodName() string {
	if o == nil || isNil(o.PodName) {
		var ret string
		return ret
	}
	return *o.PodName
}

// GetPodNameOk returns a tuple with the PodName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationLogEntry) GetPodNameOk() (*string, bool) {
	if o == nil || isNil(o.PodName) {
		return nil, false
	}
	return o.PodName, true
}

// HasPodName returns a boolean if a field has been set.
func (o *ApplicationLogEntry) HasPodName() bool {
	if o != nil && !isNil(o.PodName) {
		return true
	}

	return false
}

// SetPodName gets a reference to the given string and assigns it to the PodName field.
func (o *ApplicationLogEntry) SetPodName(v string) {
	o.PodName = &v
}

// GetTimeStamp returns the TimeStamp field value if set, zero value otherwise.
func (o *ApplicationLogEntry) GetTimeStamp() string {
	if o == nil || isNil(o.TimeStamp) {
		var ret string
		return ret
	}
	return *o.TimeStamp
}

// GetTimeStampOk returns a tuple with the TimeStamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationLogEntry) GetTimeStampOk() (*string, bool) {
	if o == nil || isNil(o.TimeStamp) {
		return nil, false
	}
	return o.TimeStamp, true
}

// HasTimeStamp returns a boolean if a field has been set.
func (o *ApplicationLogEntry) HasTimeStamp() bool {
	if o != nil && !isNil(o.TimeStamp) {
		return true
	}

	return false
}

// SetTimeStamp gets a reference to the given string and assigns it to the TimeStamp field.
func (o *ApplicationLogEntry) SetTimeStamp(v string) {
	o.TimeStamp = &v
}

// GetTimeStampStr returns the TimeStampStr field value if set, zero value otherwise.
func (o *ApplicationLogEntry) GetTimeStampStr() string {
	if o == nil || isNil(o.TimeStampStr) {
		var ret string
		return ret
	}
	return *o.TimeStampStr
}

// GetTimeStampStrOk returns a tuple with the TimeStampStr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationLogEntry) GetTimeStampStrOk() (*string, bool) {
	if o == nil || isNil(o.TimeStampStr) {
		return nil, false
	}
	return o.TimeStampStr, true
}

// HasTimeStampStr returns a boolean if a field has been set.
func (o *ApplicationLogEntry) HasTimeStampStr() bool {
	if o != nil && !isNil(o.TimeStampStr) {
		return true
	}

	return false
}

// SetTimeStampStr gets a reference to the given string and assigns it to the TimeStampStr field.
func (o *ApplicationLogEntry) SetTimeStampStr(v string) {
	o.TimeStampStr = &v
}

func (o ApplicationLogEntry) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationLogEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !isNil(o.Last) {
		toSerialize["last"] = o.Last
	}
	if !isNil(o.PodName) {
		toSerialize["podName"] = o.PodName
	}
	if !isNil(o.TimeStamp) {
		toSerialize["timeStamp"] = o.TimeStamp
	}
	if !isNil(o.TimeStampStr) {
		toSerialize["timeStampStr"] = o.TimeStampStr
	}
	return toSerialize, nil
}

type NullableApplicationLogEntry struct {
	value *ApplicationLogEntry
	isSet bool
}

func (v NullableApplicationLogEntry) Get() *ApplicationLogEntry {
	return v.value
}

func (v *NullableApplicationLogEntry) Set(val *ApplicationLogEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationLogEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationLogEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationLogEntry(val *ApplicationLogEntry) *NullableApplicationLogEntry {
	return &NullableApplicationLogEntry{value: val, isSet: true}
}

func (v NullableApplicationLogEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationLogEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
