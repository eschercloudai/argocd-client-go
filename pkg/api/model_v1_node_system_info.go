/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the V1NodeSystemInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1NodeSystemInfo{}

// V1NodeSystemInfo NodeSystemInfo is a set of ids/uuids to uniquely identify the node.
type V1NodeSystemInfo struct {
	Architecture *string `json:"architecture,omitempty"`
	// Boot ID reported by the node.
	BootID *string `json:"bootID,omitempty"`
	// ContainerRuntime Version reported by the node through runtime remote API (e.g. containerd://1.4.2).
	ContainerRuntimeVersion *string `json:"containerRuntimeVersion,omitempty"`
	// Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).
	KernelVersion *string `json:"kernelVersion,omitempty"`
	// KubeProxy Version reported by the node.
	KubeProxyVersion *string `json:"kubeProxyVersion,omitempty"`
	// Kubelet Version reported by the node.
	KubeletVersion  *string `json:"kubeletVersion,omitempty"`
	MachineID       *string `json:"machineID,omitempty"`
	OperatingSystem *string `json:"operatingSystem,omitempty"`
	// OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).
	OsImage    *string `json:"osImage,omitempty"`
	SystemUUID *string `json:"systemUUID,omitempty"`
}

// NewV1NodeSystemInfo instantiates a new V1NodeSystemInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1NodeSystemInfo() *V1NodeSystemInfo {
	this := V1NodeSystemInfo{}
	return &this
}

// NewV1NodeSystemInfoWithDefaults instantiates a new V1NodeSystemInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1NodeSystemInfoWithDefaults() *V1NodeSystemInfo {
	this := V1NodeSystemInfo{}
	return &this
}

// GetArchitecture returns the Architecture field value if set, zero value otherwise.
func (o *V1NodeSystemInfo) GetArchitecture() string {
	if o == nil || isNil(o.Architecture) {
		var ret string
		return ret
	}
	return *o.Architecture
}

// GetArchitectureOk returns a tuple with the Architecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1NodeSystemInfo) GetArchitectureOk() (*string, bool) {
	if o == nil || isNil(o.Architecture) {
		return nil, false
	}
	return o.Architecture, true
}

// HasArchitecture returns a boolean if a field has been set.
func (o *V1NodeSystemInfo) HasArchitecture() bool {
	if o != nil && !isNil(o.Architecture) {
		return true
	}

	return false
}

// SetArchitecture gets a reference to the given string and assigns it to the Architecture field.
func (o *V1NodeSystemInfo) SetArchitecture(v string) {
	o.Architecture = &v
}

// GetBootID returns the BootID field value if set, zero value otherwise.
func (o *V1NodeSystemInfo) GetBootID() string {
	if o == nil || isNil(o.BootID) {
		var ret string
		return ret
	}
	return *o.BootID
}

// GetBootIDOk returns a tuple with the BootID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1NodeSystemInfo) GetBootIDOk() (*string, bool) {
	if o == nil || isNil(o.BootID) {
		return nil, false
	}
	return o.BootID, true
}

// HasBootID returns a boolean if a field has been set.
func (o *V1NodeSystemInfo) HasBootID() bool {
	if o != nil && !isNil(o.BootID) {
		return true
	}

	return false
}

// SetBootID gets a reference to the given string and assigns it to the BootID field.
func (o *V1NodeSystemInfo) SetBootID(v string) {
	o.BootID = &v
}

// GetContainerRuntimeVersion returns the ContainerRuntimeVersion field value if set, zero value otherwise.
func (o *V1NodeSystemInfo) GetContainerRuntimeVersion() string {
	if o == nil || isNil(o.ContainerRuntimeVersion) {
		var ret string
		return ret
	}
	return *o.ContainerRuntimeVersion
}

// GetContainerRuntimeVersionOk returns a tuple with the ContainerRuntimeVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1NodeSystemInfo) GetContainerRuntimeVersionOk() (*string, bool) {
	if o == nil || isNil(o.ContainerRuntimeVersion) {
		return nil, false
	}
	return o.ContainerRuntimeVersion, true
}

// HasContainerRuntimeVersion returns a boolean if a field has been set.
func (o *V1NodeSystemInfo) HasContainerRuntimeVersion() bool {
	if o != nil && !isNil(o.ContainerRuntimeVersion) {
		return true
	}

	return false
}

// SetContainerRuntimeVersion gets a reference to the given string and assigns it to the ContainerRuntimeVersion field.
func (o *V1NodeSystemInfo) SetContainerRuntimeVersion(v string) {
	o.ContainerRuntimeVersion = &v
}

// GetKernelVersion returns the KernelVersion field value if set, zero value otherwise.
func (o *V1NodeSystemInfo) GetKernelVersion() string {
	if o == nil || isNil(o.KernelVersion) {
		var ret string
		return ret
	}
	return *o.KernelVersion
}

// GetKernelVersionOk returns a tuple with the KernelVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1NodeSystemInfo) GetKernelVersionOk() (*string, bool) {
	if o == nil || isNil(o.KernelVersion) {
		return nil, false
	}
	return o.KernelVersion, true
}

// HasKernelVersion returns a boolean if a field has been set.
func (o *V1NodeSystemInfo) HasKernelVersion() bool {
	if o != nil && !isNil(o.KernelVersion) {
		return true
	}

	return false
}

// SetKernelVersion gets a reference to the given string and assigns it to the KernelVersion field.
func (o *V1NodeSystemInfo) SetKernelVersion(v string) {
	o.KernelVersion = &v
}

// GetKubeProxyVersion returns the KubeProxyVersion field value if set, zero value otherwise.
func (o *V1NodeSystemInfo) GetKubeProxyVersion() string {
	if o == nil || isNil(o.KubeProxyVersion) {
		var ret string
		return ret
	}
	return *o.KubeProxyVersion
}

// GetKubeProxyVersionOk returns a tuple with the KubeProxyVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1NodeSystemInfo) GetKubeProxyVersionOk() (*string, bool) {
	if o == nil || isNil(o.KubeProxyVersion) {
		return nil, false
	}
	return o.KubeProxyVersion, true
}

// HasKubeProxyVersion returns a boolean if a field has been set.
func (o *V1NodeSystemInfo) HasKubeProxyVersion() bool {
	if o != nil && !isNil(o.KubeProxyVersion) {
		return true
	}

	return false
}

// SetKubeProxyVersion gets a reference to the given string and assigns it to the KubeProxyVersion field.
func (o *V1NodeSystemInfo) SetKubeProxyVersion(v string) {
	o.KubeProxyVersion = &v
}

// GetKubeletVersion returns the KubeletVersion field value if set, zero value otherwise.
func (o *V1NodeSystemInfo) GetKubeletVersion() string {
	if o == nil || isNil(o.KubeletVersion) {
		var ret string
		return ret
	}
	return *o.KubeletVersion
}

// GetKubeletVersionOk returns a tuple with the KubeletVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1NodeSystemInfo) GetKubeletVersionOk() (*string, bool) {
	if o == nil || isNil(o.KubeletVersion) {
		return nil, false
	}
	return o.KubeletVersion, true
}

// HasKubeletVersion returns a boolean if a field has been set.
func (o *V1NodeSystemInfo) HasKubeletVersion() bool {
	if o != nil && !isNil(o.KubeletVersion) {
		return true
	}

	return false
}

// SetKubeletVersion gets a reference to the given string and assigns it to the KubeletVersion field.
func (o *V1NodeSystemInfo) SetKubeletVersion(v string) {
	o.KubeletVersion = &v
}

// GetMachineID returns the MachineID field value if set, zero value otherwise.
func (o *V1NodeSystemInfo) GetMachineID() string {
	if o == nil || isNil(o.MachineID) {
		var ret string
		return ret
	}
	return *o.MachineID
}

// GetMachineIDOk returns a tuple with the MachineID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1NodeSystemInfo) GetMachineIDOk() (*string, bool) {
	if o == nil || isNil(o.MachineID) {
		return nil, false
	}
	return o.MachineID, true
}

// HasMachineID returns a boolean if a field has been set.
func (o *V1NodeSystemInfo) HasMachineID() bool {
	if o != nil && !isNil(o.MachineID) {
		return true
	}

	return false
}

// SetMachineID gets a reference to the given string and assigns it to the MachineID field.
func (o *V1NodeSystemInfo) SetMachineID(v string) {
	o.MachineID = &v
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise.
func (o *V1NodeSystemInfo) GetOperatingSystem() string {
	if o == nil || isNil(o.OperatingSystem) {
		var ret string
		return ret
	}
	return *o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1NodeSystemInfo) GetOperatingSystemOk() (*string, bool) {
	if o == nil || isNil(o.OperatingSystem) {
		return nil, false
	}
	return o.OperatingSystem, true
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *V1NodeSystemInfo) HasOperatingSystem() bool {
	if o != nil && !isNil(o.OperatingSystem) {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given string and assigns it to the OperatingSystem field.
func (o *V1NodeSystemInfo) SetOperatingSystem(v string) {
	o.OperatingSystem = &v
}

// GetOsImage returns the OsImage field value if set, zero value otherwise.
func (o *V1NodeSystemInfo) GetOsImage() string {
	if o == nil || isNil(o.OsImage) {
		var ret string
		return ret
	}
	return *o.OsImage
}

// GetOsImageOk returns a tuple with the OsImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1NodeSystemInfo) GetOsImageOk() (*string, bool) {
	if o == nil || isNil(o.OsImage) {
		return nil, false
	}
	return o.OsImage, true
}

// HasOsImage returns a boolean if a field has been set.
func (o *V1NodeSystemInfo) HasOsImage() bool {
	if o != nil && !isNil(o.OsImage) {
		return true
	}

	return false
}

// SetOsImage gets a reference to the given string and assigns it to the OsImage field.
func (o *V1NodeSystemInfo) SetOsImage(v string) {
	o.OsImage = &v
}

// GetSystemUUID returns the SystemUUID field value if set, zero value otherwise.
func (o *V1NodeSystemInfo) GetSystemUUID() string {
	if o == nil || isNil(o.SystemUUID) {
		var ret string
		return ret
	}
	return *o.SystemUUID
}

// GetSystemUUIDOk returns a tuple with the SystemUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1NodeSystemInfo) GetSystemUUIDOk() (*string, bool) {
	if o == nil || isNil(o.SystemUUID) {
		return nil, false
	}
	return o.SystemUUID, true
}

// HasSystemUUID returns a boolean if a field has been set.
func (o *V1NodeSystemInfo) HasSystemUUID() bool {
	if o != nil && !isNil(o.SystemUUID) {
		return true
	}

	return false
}

// SetSystemUUID gets a reference to the given string and assigns it to the SystemUUID field.
func (o *V1NodeSystemInfo) SetSystemUUID(v string) {
	o.SystemUUID = &v
}

func (o V1NodeSystemInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1NodeSystemInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Architecture) {
		toSerialize["architecture"] = o.Architecture
	}
	if !isNil(o.BootID) {
		toSerialize["bootID"] = o.BootID
	}
	if !isNil(o.ContainerRuntimeVersion) {
		toSerialize["containerRuntimeVersion"] = o.ContainerRuntimeVersion
	}
	if !isNil(o.KernelVersion) {
		toSerialize["kernelVersion"] = o.KernelVersion
	}
	if !isNil(o.KubeProxyVersion) {
		toSerialize["kubeProxyVersion"] = o.KubeProxyVersion
	}
	if !isNil(o.KubeletVersion) {
		toSerialize["kubeletVersion"] = o.KubeletVersion
	}
	if !isNil(o.MachineID) {
		toSerialize["machineID"] = o.MachineID
	}
	if !isNil(o.OperatingSystem) {
		toSerialize["operatingSystem"] = o.OperatingSystem
	}
	if !isNil(o.OsImage) {
		toSerialize["osImage"] = o.OsImage
	}
	if !isNil(o.SystemUUID) {
		toSerialize["systemUUID"] = o.SystemUUID
	}
	return toSerialize, nil
}

type NullableV1NodeSystemInfo struct {
	value *V1NodeSystemInfo
	isSet bool
}

func (v NullableV1NodeSystemInfo) Get() *V1NodeSystemInfo {
	return v.value
}

func (v *NullableV1NodeSystemInfo) Set(val *V1NodeSystemInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableV1NodeSystemInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableV1NodeSystemInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1NodeSystemInfo(val *V1NodeSystemInfo) *NullableV1NodeSystemInfo {
	return &NullableV1NodeSystemInfo{value: val, isSet: true}
}

func (v NullableV1NodeSystemInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1NodeSystemInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
